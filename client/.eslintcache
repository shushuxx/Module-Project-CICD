[{"C:\\Users\\admin\\Desktop\\React-CICD-Tutorial-910912\\client\\src\\index.js":"1","C:\\Users\\admin\\Desktop\\React-CICD-Tutorial-910912\\client\\src\\App.js":"2","C:\\Users\\admin\\Desktop\\React-CICD-Tutorial-910912\\client\\src\\reportWebVitals.js":"3","C:\\Users\\admin\\Desktop\\React-CICD-Tutorial-910912\\client\\src\\components\\Customer.js":"4","C:\\Users\\admin\\Desktop\\React-CICD-Tutorial-910912\\client\\src\\components\\CustomerAdd.js":"5","C:\\Users\\admin\\Desktop\\React-CICD-Tutorial-910912\\client\\src\\components\\CustomerDelete.js":"6"},{"size":688,"mtime":1644505060245,"results":"7","hashOfConfig":"8"},{"size":6170,"mtime":1644975674636,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1644505060284,"results":"10","hashOfConfig":"8"},{"size":722,"mtime":1644505060332,"results":"11","hashOfConfig":"8"},{"size":3895,"mtime":1644906899653,"results":"12","hashOfConfig":"8"},{"size":1646,"mtime":1644907013634,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"r3pvvt",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\admin\\Desktop\\React-CICD-Tutorial-910912\\client\\src\\index.js",[],["28","29"],"C:\\Users\\admin\\Desktop\\React-CICD-Tutorial-910912\\client\\src\\App.js",["30","31"],"C:\\Users\\admin\\Desktop\\React-CICD-Tutorial-910912\\client\\src\\reportWebVitals.js",[],"C:\\Users\\admin\\Desktop\\React-CICD-Tutorial-910912\\client\\src\\components\\Customer.js",[],"C:\\Users\\admin\\Desktop\\React-CICD-Tutorial-910912\\client\\src\\components\\CustomerAdd.js",["32"],"import React, { Component } from 'react';\nimport { post } from 'axios';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { createMuiTheme, withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  hidden: {\n    display: 'none'\n  }\n});\n\nclass CustomerAdd extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      userName: '',\n      birthday: '',\n      gender: '',\n      job: '',\n      fileName: '',\n      open: false\n    }\n  }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n    this.addCustomer()\n      .then(res => {\n        console.log(res.data);\n        this.props.stateRefresh();\n      });\n\n    this.setState({\n      file: null,\n      userName: '',\n      birthday: '',\n      gender: '',\n      job: '',\n      fileName: '',\n      open: false\n    });\n  }\n\n  handleFileChange = e => {\n    this.setState({\n      file: e.target.files[0],\n      fileName: e.target.value\n    })\n  }\n\n  handleValueChange = e => {\n    let nextState = {};\n    nextState[e.target.name] = e.target.value;\n    this.setState(nextState);\n  }\n\n  addCustomer = () => {\n    const url = `/api/add`;\n    const formData = new FormData();\n    // formData.append(`image`, this.state.file);\n    formData.append(`name`, this.state.userName);\n    formData.append(`birthday`, this.state.birthday);\n    formData.append(`gender`, this.state.gender);\n    formData.append(`job`, this.state.job);\n    formData.append(`fileName`, this.state.fileName);\n\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }\n    return post(url, formData, config);\n  }\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  }\n\n  handleClose = () => {\n    this.setState({\n      file: null,\n      userName: '',\n      birthday: '',\n      gender: '',\n      job: '',\n      fileName: '',\n      open: false\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\n          고객 추가하기\n        </Button>\n        <Dialog open={this.state.open} onClose={this.handleClose}>\n          <DialogTitle>고객 추가</DialogTitle>\n          <DialogContent>\n            <input className={classes.hidden} accept=\"image/*\" id=\"raised-button-file\" type=\"file\" file={this.state.file} value={this.state.fileName} onChange={this.handleFileChange} /> <br />\n            <label htmlFor=\"raised-button-file\">\n              {/* <Button variant=\"contained\" component=\"span\" name=\"file\">\n                {this.state.fileName === \"\" ? \"프로필 이미지 선택\" : this.state.fileName}\n              </Button> */}\n\n            </label><br />\n            <TextField label=\"이름\" type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleValueChange} /><br />\n            <TextField label=\"생년월일\" type=\"text\" name=\"birthday\" value={this.state.birthday} onChange={this.handleValueChange} /><br />\n            <TextField label=\"성별\" type=\"text\" name=\"gender\" value={this.state.gender} onChange={this.handleValueChange} /><br />\n            <TextField label=\"직업\" type=\"text\" name=\"job\" value={this.state.job} onChange={this.handleValueChange} /><br />\n          </DialogContent>\n          <DialogActions>\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>추가</Button>\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n};\n\nexport default withStyles(styles)(CustomerAdd);","C:\\Users\\admin\\Desktop\\React-CICD-Tutorial-910912\\client\\src\\components\\CustomerDelete.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":11,"column":10,"nodeType":"39","messageId":"40","endLine":11,"endColumn":24},{"ruleId":"37","severity":1,"message":"41","line":19,"column":16,"nodeType":"39","messageId":"40","endLine":19,"endColumn":26},{"ruleId":"37","severity":1,"message":"38","line":9,"column":10,"nodeType":"39","messageId":"40","endLine":9,"endColumn":24},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'createMuiTheme' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation"]